version: '3'

services:
  app:
    container_name: app
    build: .
    restart: always
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    develop:
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./src
          target: /app/src
          action: sync
  db:
    container_name: db
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}", "-d", "${POSTGRES_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge